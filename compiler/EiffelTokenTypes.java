// $ANTLR 2.7.3: "eiffel.g" -> "EiffelParser.java"$

package tinyeiffel.compiler;


public interface EiffelTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int EXPANDED = 4;
	int DEFERRED = 5;
	int CLASS = 6;
	int OBSOLETE = 7;
	int FEATURE = 8;
	int ACOLADEO = 9;
	int VIRGULE = 10;
	int ACOLADEF = 11;
	int SEMI = 12;
	int INVARIANT = 13;
	int END = 14;
	int INDEXING = 15;
	int ID = 16;
	int DOUBLE_POINT = 17;
	int STRING = 18;
	int INHERIT = 19;
	int RENAME = 20;
	int AS = 21;
	int EXPORT = 22;
	int ALL = 23;
	int UNDEFINE = 24;
	int REDEFINE = 25;
	int SELECT = 26;
	int CREATION = 27;
	int INFIX = 28;
	int PREFIX = 29;
	int LPAREN = 30;
	int RPAREN = 31;
	int CROCHETO = 32;
	int CROCHETF = 33;
	int FLECHED = 34;
	int LIKE = 35;
	int FROZEN = 36;
	int IS = 37;
	int REQUIRE = 38;
	int ELSE = 39;
	int ENSURE = 40;
	int THEN = 41;
	int RESCUE = 42;
	int UNIQUE = 43;
	int LOCAL = 44;
	int DO = 45;
	int ONCE = 46;
	int EXTERNAL = 47;
	int ALIAS = 48;
	int POINT = 49;
	int AFFECT = 50;
	int TENTATIVE_AFFECT = 51;
	int LPARENT = 52;
	int RPARENT = 53;
	int INT = 54;
	int REAL = 55;
	int CHAR = 56;
	int FROM = 57;
	int VARIANT = 58;
	int UNTIL = 59;
	int LOOP = 60;
	int IF = 61;
	int ELSEIF = 62;
	int EXCLAMATION = 63;
	int RETRY = 64;
	int INSPECT = 65;
	int WHEN = 66;
	int CHECK = 67;
	int DEBUG = 68;
	int DEUX_POINT = 69;
	int XOR = 70;
	int IMPLIES = 71;
	int OR = 72;
	int AND = 73;
	int EGAL = 74;
	int DIFF = 75;
	int INFS = 76;
	int INF = 77;
	int SUPS = 78;
	int SUP = 79;
	int PLUS = 80;
	int MOINS = 81;
	int FOIS = 82;
	int DIV = 83;
	int DIV_ENTIER = 84;
	int MOD = 85;
	int PUISS = 86;
	int FREEOP = 87;
	int OLD = 88;
	int NOT = 89;
	int DOLLARD = 90;
	int DEBUT_ARRAY = 91;
	int FIN_ARRAY = 92;
	int TRUE = 93;
	int FALSE = 94;
	int STRING2 = 95;
	int STRING3 = 96;
	int STRING4 = 97;
	int SEPARATE = 98;
	int STRIP = 99;
	int WS = 100;
	int COMMENTAIRE = 101;
	int DIGIT = 102;
	int EXPOSANT = 103;
}
